
#----------------------------------------------------------------------------
# Setup the project
#
cmake_minimum_required(VERSION 2.6 FATAL_ERROR)
project(nnbar-calo-sim)

#----------------------------------------------------------------------------
# Find Geant4 package, activating all available UI and Vis drivers by default
# You can set WITH_GEANT4_UIVIS to OFF via the command line or ccmake/cmake-gui
# to build a batch mode only executable
#
option(WITH_GEANT4_UIVIS "Build nnbar-calo-sim with Geant4 UI and Vis drivers" ON)
if(WITH_GEANT4_UIVIS)
  find_package(Geant4 REQUIRED ui_all vis_all)
else()
  find_package(Geant4 REQUIRED)
endif()
#----------------------------------------------------------------------------
# Setup Geant4 include directories and compile definitions
# Setup include directory for this project
#
include(${Geant4_USE_FILE})
include_directories(${PROJECT_SOURCE_DIR}/include)

#----------------------------------------------------------------------------
# Locate sources and headers for this project
# NB: headers are included so they will show up in IDEs
#
file(GLOB sources ${PROJECT_SOURCE_DIR}/src/*.cc)
file(GLOB headers ${PROJECT_SOURCE_DIR}/include/*.hh)

#----------------------------------------------------------------------------
# Add the executable, and link it to the Geant4 libraries
#
add_executable(nnbar-calo-sim nnbar-calo-sim.cc ${sources} ${headers})
target_link_libraries(nnbar-calo-sim ${Geant4_LIBRARIES})
#----------------------------------------------------------------------------
# MCPL libraries
add_library(mcpl STATIC ${PROJECT_SOURCE_DIR}/src/mcpl.c)
install(TARGETS mcpl DESTINATION lib)
install(FILES mcpl.h DESTINATION include)

add_library(G4MCPLGenerator STATIC ${PROJECT_SOURCE_DIR}/src/G4MCPLGenerator.cc)
install(TARGETS G4MCPLGenerator DESTINATION lib)
install(FILES G4MCPLGenerator.hh DESTINATION include)

add_library(G4MCPLWriter STATIC ${PROJECT_SOURCE_DIR}/src/G4MCPLWriter.cc)
install(TARGETS G4MCPLWriter DESTINATION lib)
install(FILES G4MCPLWriter.hh DESTINATION include)

target_link_libraries(nnbar-calo-sim mcpl)
target_link_libraries(nnbar-calo-sim G4MCPLGenerator)
target_link_libraries(nnbar-calo-sim G4MCPLWriter)

#----------------------------------------------------------------------------
# Copy all scripts to the build directory, i.e. the directory in which we
# build. This is so that we can run the executable directly because it
# relies on these scripts being in the current working directory.
#
set(SCRIPTS
  nnbar-calo-sim.in
  gui.mac
  init_vis.mac
  vis.mac
  )

foreach(_script ${SCRIPTS})
  configure_file(
    ${PROJECT_SOURCE_DIR}/${_script}
    ${PROJECT_BINARY_DIR}/${_script}
    COPYONLY
    )
endforeach()

#----------------------------------------------------------------------------
# Install the executable to 'bin' directory under CMAKE_INSTALL_PREFIX
#
install(TARGETS nnbar-calo-sim DESTINATION bin)
